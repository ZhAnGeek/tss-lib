// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";
package binance.tsslib.ecdsa.presigning;
option go_package = "ecdsa/presigning";

/*
 * Represents a P2P message sent to each party during Round 1 of the ECDSA TSS signing protocol.
 */
message PreSignRound1Message {
    bytes K = 1;
    bytes G = 2;
    repeated bytes EncProof = 3;
}

/*
 * Represents a P2P message sent to each party during Round 2 of the ECDSA TSS signing protocol.
 */
message PreSignRound2Message {
    repeated bytes BigGammaShare = 1;
    bytes DjiDelta = 2;
    bytes FjiDelta = 3;
    bytes DjiChi = 4;
    bytes FjiChi = 5;
    repeated bytes AffgProofDelta = 6;
    repeated bytes AffgProofChi = 7;
    repeated bytes LogstarProof = 8;
}

/*
 * Represents a P2P message sent to all parties during Round 3 of the ECDSA TSS signing protocol.
 */
message PreSignRound3Message {
    bytes DeltaShare = 1;
    repeated bytes BigDeltaShare = 2;
    repeated bytes ProofLogstar = 3;
}

message IdentificationRound1Message {
    bytes H = 1;
    repeated bytes MulProof = 2;
    repeated bytes Djis = 3;
    repeated bytes Fjis = 4;
    repeated bytes DjiProofs = 5;
    repeated bytes DecProof = 6;
    bytes Q3Enc = 7;
    bytes DeltaShareEnc = 8;
}

/*
 * Container for output presignatures
 */
 message PreSignatureData {
    int32 index = 1;
    bytes ssid = 2;
    repeated bytes bigR = 3;
    bytes kShare = 4;
    bytes chiShare = 5;
}


/*
 * Container for LocalDump
 */
 message LocalDumpPB {
    int32 Index = 1;
    int32 RoundNum = 2;

    bytes LTssid = 3;
    bytes LTw = 4;
    repeated bytes LTBigWs = 5;
    bytes LTKShare = 6;

    repeated bytes LTBigGammaShare = 7;
    bytes LTK = 8;
    bytes LTG = 9;
    bytes LTKNonce = 10;
    bytes LTGNonce = 11;
    bytes LTkeyDerivationDelta = 12;

    bytes LTGammaShare = 13;
    repeated bytes LTDeltaShareBetas = 14;
    repeated bytes LTChiShareBetas = 15;

    repeated bytes LTBigGamma = 16;
    repeated bytes LTDeltaShareAlphas = 17;
    repeated bytes LTChiShareAlphas = 18;
    bytes LTDeltaShare = 19;
    bytes LTChiShare = 20;
    repeated bytes LTBigDeltaShare = 21;

    repeated bytes LTBigR = 22;
    bytes LTRx = 23;
    bytes LTSigmaShare = 24;

    repeated bytes LTr1msgG = 25;
    repeated bytes LTr1msgK = 26;
    repeated bytes LTr1msgProof = 27;

    repeated bytes LTr2msgBigGammaShare = 28;
    repeated bytes LTr2msgDeltaD = 29;
    repeated bytes LTr2msgDeltaF = 30;
    repeated bytes LTr2msgDeltaProof = 31;
    repeated bytes LTr2msgChiD = 32;
    repeated bytes LTr2msgChiF = 33;
    repeated bytes LTr2msgChiProof = 34;
    repeated bytes LTr2msgProofLogstar = 35;

    repeated bytes LTr3msgDeltaShare = 36;
    repeated bytes LTr3msgBigDeltaShare = 37;
    repeated bytes LTr3msgProofLogstar = 38;

    repeated bytes LTr4msgSigmaShare = 39;

    repeated bytes LTDeltaMtAFs = 40;
    repeated bytes LTChiMtAFs = 41;
    repeated bytes LTDeltaMtADs = 42;
    repeated bytes LDDeltaMtADProofs = 43;
    repeated bytes LTr6msgH = 44;
    repeated bytes LTr6msgProofMul = 45;
    // repeated bytes LTr6msgDeltaShareEnc = 46;
    repeated bytes LTr6msgProofDec = 47;
    repeated bytes LTr6msgDjis = 48;
    repeated bytes LTr6msgFjis = 49;
    repeated bytes LTr6msgQ3Enc = 50;
}
