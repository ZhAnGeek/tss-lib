// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";
package binance.tsslib.v2.ecdsa.presigning;
option go_package = "ecdsa/presigning";

/*
 * Represents a P2P message sent to each party during Round 1 of the ECDSA TSS signing protocol.
 */
message PreSignRound1Message1 {
    bytes K = 1;
    bytes G = 2;
}

/*
 * Represents a P2P message sent to each party during Round 1 of the ECDSA TSS signing protocol.
 */
message PreSignRound1Message2 {
    repeated bytes EncProof = 3;
}

/*
 * Represents a P2P message sent to each party during Round 2 of the ECDSA TSS signing protocol.
 */
message PreSignRound2Message {
    repeated bytes BigGammaShare = 1;
    bytes DjiDelta = 2;
    bytes FjiDelta = 3;
    bytes DjiChi = 4;
    bytes FjiChi = 5;
    repeated bytes AffgProofDelta = 6;
    repeated bytes AffgProofChi = 7;
    repeated bytes LogstarProof = 8;
}

/*
 * Represents a P2P message sent to all parties during Round 3 of the ECDSA TSS signing protocol.
 */
message PreSignRound3Message {
    bytes DeltaShare = 1;
    repeated bytes BigDeltaShare = 2;
    repeated bytes ProofLogstar = 3;
}

/*
 * Represents a BROADCAST message sent to all parties during Identification Round 1 of the ECDSA TSS presigning protocol.
 */
message IdentificationRound1Message1 {
    bytes H = 1;
    repeated bytes MulProof = 2;
    repeated bytes Djis = 3;
    repeated bytes Fjis = 4;
}

/*
 * Represents a P2P message sent to all parties during Identification Round 1 of the ECDSA TSS presigning protocol.
 */
message IdentificationRound1Message2 {
  repeated bytes AffgProofs = 1;
  repeated bytes DecProof = 2;
}

/*
 * Container for output presignatures
 */
 message PreSignatureData {
    int32 Index = 1;
    bytes Ssid = 2;
    repeated bytes bigR = 3;
    bytes KShare = 4;
    bytes ChiShare = 5;

    // Transcript for signing identification
    bytes LRK = 6;
    repeated bytes LRr1msgK = 7;
    repeated bytes LRChiShareAlphas = 8;
    repeated bytes LRChiShareBetas = 9;
    repeated bytes LRr2msgChiD = 10;

    repeated bytes LRChiMtAFs = 11;
    repeated bytes LRChiMtADs = 12;
    repeated bytes LRChiMtADProofs = 13;
    repeated bytes LRChiMtABetaNeg = 14;
    repeated bytes LRChiMtASij = 15;
    repeated bytes LRChiMtARij = 16;
    bytes SsidNonce = 17;
}


/*
 * Container for LocalDump
 */
 message LocalDumpPB {
    int32 Index = 1;
    int32 RoundNum = 2;

    bytes LTssid = 3;
    bytes LTw = 4;
    repeated bytes LTBigWs = 5;
    bytes LTKShare = 6;

    repeated bytes LTBigGammaShare = 7;
    bytes LTK = 8;
    bytes LTG = 9;
    bytes LTKNonce = 10;
    bytes LTGNonce = 11;
    //bytes LTkeyDerivationDelta = 12;

    bytes LTGammaShare = 13;
    repeated bytes LTDeltaShareBetas = 14;
    repeated bytes LTChiShareBetas = 15;

    repeated bytes LTBigGamma = 16;
    repeated bytes LTDeltaShareAlphas = 17;
    repeated bytes LTChiShareAlphas = 18;
    bytes LTDeltaShare = 19;
    bytes LTChiShare = 20;
    repeated bytes LTBigDeltaShare = 21;

    repeated bytes LTBigR = 22;
    bytes LTRx = 23;
    bytes LTSigmaShare = 24;

    repeated bytes LTr1msgG = 25;
    repeated bytes LTr1msgK = 26;
    repeated bytes LTr1msgProof = 27;

    repeated bytes LTr2msgBigGammaShare = 28;
    repeated bytes LTr2msgDeltaD = 29;
    repeated bytes LTr2msgDeltaF = 30;
    repeated bytes LTr2msgDeltaProof = 31;
    repeated bytes LTr2msgChiD = 32;
    repeated bytes LTr2msgChiF = 33;
    repeated bytes LTr2msgChiProof = 34;
    repeated bytes LTr2msgProofLogstar = 35;

    repeated bytes LTr3msgDeltaShare = 36;
    repeated bytes LTr3msgBigDeltaShare = 37;
    repeated bytes LTr3msgProofLogstar = 38;

    repeated bytes LTDeltaMtAFs = 40;
    repeated bytes LTDeltaMtADs = 41;
    repeated bytes LTDeltaMtADProofs = 42;
    repeated bytes LTDeltaMtABetaNeg = 43;
    repeated bytes LTDeltaMtASij = 44;
    repeated bytes LTDeltaMtARij = 45;
    repeated bytes LTChiMtAFs = 46;
    repeated bytes LTChiMtADs = 47;
    repeated bytes LTChiMtADProofs = 48;
    repeated bytes LTChiMtABetaNeg = 49;
    repeated bytes LTChiMtASij = 50;
    repeated bytes LTChiMtARij = 51;
    repeated bytes LTr5msgH = 52;
    repeated bytes LTr5msgProofMul = 53;
    repeated bytes LTr5msgProofDec = 54;
    repeated bytes LTr5msgProofAffg = 55;
    repeated bytes LTr5msgDjis = 56;
    repeated bytes LTr5msgFjis = 57;
    bytes LTssidNonce = 58;
}
